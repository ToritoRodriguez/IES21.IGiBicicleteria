package principal.vista.productos.marca;

import javax.swing.*;
import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.List;
import modelo.producto.marca.Marca;
import repositorio.dao.marca.MarcaDaoImpl;
import principal.vista.productos.HomeMenuProductos;

/**
 *
 * @author rodri
 */

public class ListarMarca extends javax.swing.JFrame {

    private JTable marcaTable;
    private JButton listarButton, backButton;
    private JTextField codigoField, nombreField;

    public ListarMarca() {
        setTitle("Listar Marcas");
        setSize(800, 600);
        setDefaultCloseOperation(EXIT_ON_CLOSE);
        setLocationRelativeTo(null);  // Centrar la ventana en la pantalla
        setLayout(new BorderLayout(10, 10));

        // Panel superior para el título
        JPanel titlePanel = new JPanel();
        JLabel titleLabel = new JLabel("Listar Marcas", SwingConstants.CENTER);
        titleLabel.setFont(new Font("Arial", Font.BOLD, 24));
        titlePanel.add(titleLabel);
        add(titlePanel, BorderLayout.NORTH);

        // Panel de filtro para el código de la marca (opcional) y nombre
        JPanel filterPanel = new JPanel(new GridLayout(2, 2, 10, 10));
        filterPanel.add(new JLabel("Código de la Marca (Opcional):"));
        codigoField = new JTextField();
        filterPanel.add(codigoField);

        filterPanel.add(new JLabel("Nombre de la Marca (Opcional):"));
        nombreField = new JTextField();
        filterPanel.add(nombreField);

        listarButton = new JButton("Listar");
        listarButton.addActionListener(new ListarButtonListener());  // Pasamos el campo de código al listener
        filterPanel.add(listarButton);

        add(filterPanel, BorderLayout.NORTH);

        // Tabla para listar las marcas
        String[] columnNames = {"Código", "Nombre"};
        marcaTable = new JTable(new Object[0][2], columnNames);
        JScrollPane scrollPane = new JScrollPane(marcaTable);
        add(scrollPane, BorderLayout.CENTER);

        // Panel inferior para el botón de volver
        JPanel buttonPanel = new JPanel(new FlowLayout());

        backButton = new JButton("Volver");
        backButton.addActionListener(e -> {
            new HomeMenuProductos().setVisible(true);
            dispose();
        });
        buttonPanel.add(backButton);

        add(buttonPanel, BorderLayout.SOUTH);
    }

    private class ListarButtonListener implements ActionListener {

        @Override
        public void actionPerformed(ActionEvent e) {
            String codigoText = codigoField.getText().trim();
            String nombreText = nombreField.getText().trim();

            // Llamar al método para obtener marcas filtradas
            actualizarTablaMarcas(codigoText.isEmpty() ? null : codigoText, nombreText.isEmpty() ? null : nombreText);
        }
    }

    private void actualizarTablaMarcas(String codigo, String nombre) {
        MarcaDaoImpl marcaDao = new MarcaDaoImpl();
        List<Marca> marcas = marcaDao.getMarcas(codigo, nombre);  // Pasamos tanto código como nombre al método

        // Depuración: muestra el número de marcas encontradas
        System.out.println("Número de marcas encontradas: " + marcas.size());

        // Crear los datos para la tabla
        Object[][] data = new Object[marcas.size()][2];
        for (int i = 0; i < marcas.size(); i++) {
            Marca marca = marcas.get(i);
            data[i][0] = marca.getCodigo();  // Asegúrate de que el código se obtiene correctamente
            data[i][1] = marca.getMarca();
        }

        // Si no se encontraron marcas, muestra un mensaje
        if (marcas.size() == 0) {
            JOptionPane.showMessageDialog(this, "No se encontraron marcas con los filtros proporcionados.");
        }

        // Actualizar la tabla con los resultados
        marcaTable.setModel(new javax.swing.table.DefaultTableModel(
                data,
                new String[]{"Código", "Nombre"}
        ));
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ListarMarca.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ListarMarca.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ListarMarca.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ListarMarca.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ListarMarca().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
}
